import{_ as i,o as a,c as l,f as e}from"./app-7e2007b0.js";const r={},h=e('<h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h3><p><code>2022.06.09</code></p><p>最近接了点外包，客户要求建立一个统一的事件发布推送机制。本来图简单，想弄个 MQ就结束了。</p><p>但是客户想做得更加完善，要求：</p><ul><li>使用发布订阅机制，可以明确订阅方</li><li>可以保留消息推送记录和送达结果</li><li>可以保存消息处理结果</li></ul><hr><p>这里就不做代码实现了，其实也开发也简单。</p><br><h3 id="实现思路" tabindex="-1"><a class="header-anchor" href="#实现思路" aria-hidden="true">#</a> 实现思路</h3><p>大致流程如下图所示：</p><p><img src="https://shiva.oss-cn-hangzhou.aliyuncs.com/picture-master/202204/image-20220609210513569.png" alt=""></p><p>这里有一些通用的细节需要处理：</p><ol><li><strong>同一个订阅地址重复订阅相同的事件，需要内部逻辑自动去重，确保不重复投递事件</strong></li><li><strong>事件接收地址由应用方负责按指定的规范提供，并且，事件接收接口不需要认证</strong></li><li><strong>不同的事件，有的需要做同步，有的只需要异步，需要做好区分</strong></li><li><strong>设计一些通用的，重复投递机制</strong></li></ol><p>MMP，做个进阶版还挺麻烦的。</p><br><h3 id="表结构设计" tabindex="-1"><a class="header-anchor" href="#表结构设计" aria-hidden="true">#</a> 表结构设计</h3><h4 id="事件类型" tabindex="-1"><a class="header-anchor" href="#事件类型" aria-hidden="true">#</a> 事件类型</h4><p>事件类型可以作为枚举，也可以做字典、建表</p><p>反正就是列举一些事件触发，需不需要多次推送，是同步还是异步</p><h4 id="第三方订阅信息表" tabindex="-1"><a class="header-anchor" href="#第三方订阅信息表" aria-hidden="true">#</a> 第三方订阅信息表</h4><ul><li>主键</li><li>订阅地址</li><li>订阅类型（可以扩展为多个字段，例如优先级、是否重复推送、）</li><li>订阅时间</li><li>生效状态</li></ul><h4 id="事件推送记录表" tabindex="-1"><a class="header-anchor" href="#事件推送记录表" aria-hidden="true">#</a> 事件推送记录表</h4><ul><li>主键</li><li>推送时间</li><li>推送报文json</li><li>推送事件类型</li><li>是否同步事件（同步需要等待结果并保存，异步不需要）</li><li>第三方接受结果</li><li>第三方响应信息</li><li>第三方响应时间</li></ul><br><h3 id="基础对外文档" tabindex="-1"><a class="header-anchor" href="#基础对外文档" aria-hidden="true">#</a> 基础对外文档</h3><ul><li><a href="https://shiva.oss-cn-hangzhou.aliyuncs.com/data/XXXX%E7%B3%BB%E7%BB%9F%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%9C%BA%E5%88%B6%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.docx" target="_blank">简单文档模板</a></li></ul>',26),t=[h];function n(s,d){return a(),l("div",null,t)}const c=i(r,[["render",n],["__file","发布订阅机制.html.vue"]]);export{c as default};
