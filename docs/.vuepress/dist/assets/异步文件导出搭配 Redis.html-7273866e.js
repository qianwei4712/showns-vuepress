import{_ as p,r as e,o as c,c as o,b as n,d as a,a as t,f as l}from"./app-c1e62972.js";const i={},u=l(`<h3 id="背景介绍" tabindex="-1"><a class="header-anchor" href="#背景介绍" aria-hidden="true">#</a> 背景介绍</h3><p><code>2022.10.13</code></p><blockquote><p>ruoyi 框架开发的一个项目，因为导出大量使用注解，在写入数据过程中产生反射耗时过长，导致前端请求超时。</p></blockquote><p>网上找了下没有什么根本解决办法，开始分析下：</p><ol><li>第一反应就是多线程写入，但是用的是 <code>SXSSFWorkbook</code> ；它是直接写入持久化到磁盘的，所以可能存在数据顺序不正确（脑补的，没深入研究）</li><li>否定上一个，就想用异步下载的方式：其实就是先返回，后台开线程创建，过段时间前端再下载</li><li>这样的话，如果前端轮询显得不够优雅，再加一个下载中心，保存记录和下载地址</li><li>但是又不想加表，只是导出而已，所以引入 Redis</li></ol><br><h3 id="设想方案" tabindex="-1"><a class="header-anchor" href="#设想方案" aria-hidden="true">#</a> 设想方案</h3><p>基础版方案：</p><blockquote><ul><li>引入 Redis，将导出记录和导出状态（完成、未完成）保存在缓存中</li><li>将文件保存在 阿里云 OSS里，因为 OSS 可以直接设置生命周期，直接设置 1天过期 <ul><li>这样的话，Redis 和 OSS 同时过期，干净卫生</li></ul></li><li>前端还要加一个下载中心页面，数据直接从Redis里下载 <ul><li>因为可能存在数据权限问题，所以这里对文件记录要做区分</li><li>缓存的 Key 可以是： <strong>DOWNLOAD:USERID:UUID</strong></li><li>缓存的 Value 可以是：<strong>{ 创建状态（进行中、成功）、创建时间、文件名、OSS文件路径、创建人、请求参数 }</strong></li></ul></li></ul></blockquote><p>看起来好像可以了，但是这里还有几个细节</p><ol><li>如果前端重复请求，那不是一直在创建大文件？这不是无所谓的对服务器加压吗</li><li>每次下载还得切换到下载中心，点击下载，操作不够流程</li></ol><p>针对这两个问题，再对上述方案做下改进：</p><blockquote><ul><li><strong>在前端可以设置一个轮询（说好的不优雅呢），根据第一次下载返回的ID下载，只要后台一完成，就可以直接下载，不再切换页面</strong></li><li><strong>相同请求，一定时间内（例如 5分钟）不再重新创建生成文件：相同请求人、相同请求、相同请求参数</strong></li></ul></blockquote><p>所以，总体的流程为：</p><p><img src="https://shiva.oss-cn-hangzhou.aliyuncs.com/picture-master/202204/文件下载RedisOSS不加表自动过期.png" alt=""></p><br><h3 id="后台代码实现" tabindex="-1"><a class="header-anchor" href="#后台代码实现" aria-hidden="true">#</a> 后台代码实现</h3><p><code>细节可以自行优化</code></p><p>Redis 中保存的记录对象：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Builder</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExportCacheDTO</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">//文件id</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> uuid<span class="token punctuation">;</span>
    <span class="token comment">//文件名</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> fileName<span class="token punctuation">;</span>
    <span class="token comment">//创建人</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> createBy<span class="token punctuation">;</span>
    <span class="token comment">//创建时间</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> createTime<span class="token punctuation">;</span>
    <span class="token comment">//创建时间戳</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> timestamp<span class="token punctuation">;</span>
    <span class="token comment">//导出状态，false-创建中，true-已创建</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> complete<span class="token punctuation">;</span>
    <span class="token comment">//文件OSS地址</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>
    <span class="token comment">//本次导出请求参数</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> params<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回前端的结果集：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Builder</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExportDownloadBO</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 当前导出状态；
     * 0-第一次创建（可以用UUID轮询），1-创建中（可以用UUID轮询），2-已创建（url可以直接下载）
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> status<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> uuid<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>导出工具类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 导出缓存封装工具类
 *
 * <span class="token keyword">@author</span> shiva   2022-10-13 21:04
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExportCacheUtil</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">AliyunOssUpload</span> aliyunOssUpload<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisCache</span> redisCache<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">ThreadPoolConfig</span> pool<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 重复请求标志，放在请求实体参数的 map 里面
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">REPEAT_DOWNLOAD_FLAG</span> <span class="token operator">=</span> <span class="token string">&quot;repeatDownload&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 文件下载redis键的前缀，当前结构为 前缀 + 用户id + UUID
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CACHE_DOWNLOAD_KEY_PREFIX</span> <span class="token operator">=</span> <span class="token string">&quot;CACHE_DOWNLOAD:&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * OSS的前缀，用来设置做生命周期的匹配规则
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DOWN_FILE_CACHE_REDIS</span> <span class="token operator">=</span> <span class="token string">&quot;downfilecacheredis&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 有效的间隔时间，时间太长实时数据会发生变化
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">INTERVAL</span> <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token class-name">AjaxResult</span> <span class="token function">downloadFromCache</span><span class="token punctuation">(</span><span class="token class-name">MPBaseEntity</span> entity<span class="token punctuation">,</span> <span class="token class-name">Class</span> clazz<span class="token punctuation">,</span> <span class="token class-name">List</span> list<span class="token punctuation">,</span> <span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">String</span> exportType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.先判断，是不是轮询请求创建结束的下载地址</span>
        <span class="token comment">// 从请求参数里，拿到第一次请求获取到的 UUID</span>
        <span class="token class-name">String</span> repeatRequestUid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> entity<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">REPEAT_DOWNLOAD_FLAG</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>repeatRequestUid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果真的存在，那就要进入分支，开始获取Redis里的数据了</span>
            <span class="token keyword">return</span> <span class="token class-name">AjaxResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token function">redisUidFilter</span><span class="token punctuation">(</span>repeatRequestUid<span class="token punctuation">,</span> exportType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// ******* 第一个判断分支结束 ******************************************************</span>

        <span class="token comment">// 2.再判断找个用户是否已经请求过了，主要判断 请求人、请求参数、导出类型</span>
        <span class="token class-name">String</span> requestParams <span class="token operator">=</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//这里有三个结果：创建成功（true,有地址），正在创建中（false,没地址），第一次创建（null，null）</span>
        <span class="token class-name">ExportDownloadBO</span> exportDownloadBO <span class="token operator">=</span> <span class="token function">redisParamsFilter</span><span class="token punctuation">(</span>requestParams<span class="token punctuation">,</span> exportType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">!=</span> exportDownloadBO<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//不等于0，就是创建中，已创建；都可以直接返回</span>
            <span class="token keyword">return</span> <span class="token class-name">AjaxResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>exportDownloadBO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// ******* 第二个判断分支结束 ******************************************************</span>

        <span class="token comment">// 3.最后才是实际开始生成文件</span>
        <span class="token comment">// 先生成UUID</span>
        <span class="token class-name">String</span> uuid <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//开启线程，执行任务</span>
        <span class="token class-name">LoginUser</span> loginUser <span class="token operator">=</span> <span class="token class-name">SecurityUtils</span><span class="token punctuation">.</span><span class="token function">getLoginUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">threadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
                <span class="token function">createWorkBook</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> list<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> requestParams<span class="token punctuation">,</span> uuid<span class="token punctuation">,</span> loginUser<span class="token punctuation">,</span> exportType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//返回前端，开始轮询</span>
        exportDownloadBO<span class="token punctuation">.</span><span class="token function">setUuid</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">AjaxResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;正在获取中，稍后可以到下载中心下载&quot;</span><span class="token punctuation">,</span> exportDownloadBO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 实际创建文件，保存到OSS中，保存到 redis中
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createWorkBook</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">,</span> <span class="token class-name">List</span> list<span class="token punctuation">,</span> <span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">String</span> requestParams<span class="token punctuation">,</span> <span class="token class-name">String</span> uuid<span class="token punctuation">,</span> <span class="token class-name">LoginUser</span> loginUser<span class="token punctuation">,</span> <span class="token class-name">String</span> exportType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 开始了，创建导出对象</span>
        <span class="token class-name">ExcelUtil</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> util <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelUtil</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">OutputStream</span> out <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> absoluteFile <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 先创建一个 Value，预先放到缓存里</span>
            <span class="token class-name">ExportCacheDTO</span> cacheDTO <span class="token operator">=</span> <span class="token class-name">ExportCacheDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">uuid</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fileName</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createBy</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNickName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">createTime</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">dateTimeNow</span><span class="token punctuation">(</span><span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token constant">YYYY_MM_DD_HH_MM_SS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">timestamp</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">params</span><span class="token punctuation">(</span>requestParams<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 塞到缓存里， 24 小时过期</span>
            redisCache<span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token constant">CACHE_DOWNLOAD_KEY_PREFIX</span> <span class="token operator">+</span> loginUser<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> exportType <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> uuid<span class="token punctuation">,</span>
                    cacheDTO<span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">HOURS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// ******* 开始实际创建文件以及上传 ******************************************************</span>
            <span class="token comment">// ******* 这个部分代码可以替换，不一定非要使用OSS，留在本地3天删除也可以 ******************************************************</span>

            util<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> <span class="token class-name">Excel<span class="token punctuation">.</span>Type</span><span class="token punctuation">.</span><span class="token constant">EXPORT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            util<span class="token punctuation">.</span><span class="token function">writeSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            absoluteFile <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">getAbsoluteFile</span><span class="token punctuation">(</span>util<span class="token punctuation">.</span><span class="token function">encodingFilename</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>absoluteFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
            util<span class="token punctuation">.</span>wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 在把 file文件转成 mp 文件</span>
            <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>absoluteFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MultipartFile</span> cMultiFile <span class="token operator">=</span> <span class="token function">getMultipartFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 传到OSS，然后拿到URI地址</span>
            <span class="token class-name">String</span> url <span class="token operator">=</span> aliyunOssUpload<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token constant">DOWN_FILE_CACHE_REDIS</span><span class="token punctuation">,</span> cMultiFile<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// ******* 实际创建文件以及上传结束 ******************************************************</span>

            <span class="token comment">//补全字段，重新塞一下</span>
            cacheDTO<span class="token punctuation">.</span><span class="token function">setComplete</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cacheDTO<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
            redisCache<span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token constant">CACHE_DOWNLOAD_KEY_PREFIX</span> <span class="token operator">+</span> loginUser<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> exportType <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> uuid<span class="token punctuation">,</span> cacheDTO<span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">HOURS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>util<span class="token punctuation">.</span>wb<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 最后要把本地文件删掉，别占磁盘空间</span>
            <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">deleteFile</span><span class="token punctuation">(</span>absoluteFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * 根据UUID，从redis中检索
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">ExportDownloadBO</span> <span class="token function">redisUidFilter</span><span class="token punctuation">(</span><span class="token class-name">String</span> uuid<span class="token punctuation">,</span> <span class="token class-name">String</span> exportType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//拿到了可以直接返回</span>
        <span class="token class-name">ExportCacheDTO</span> cacheObject <span class="token operator">=</span> redisCache<span class="token punctuation">.</span><span class="token function">getCacheObject</span><span class="token punctuation">(</span><span class="token constant">CACHE_DOWNLOAD_KEY_PREFIX</span> <span class="token operator">+</span> <span class="token class-name">SecurityUtils</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> exportType <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cacheObject <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>cacheObject<span class="token punctuation">.</span><span class="token function">isComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//空的，或者还在创建中</span>
            <span class="token keyword">return</span> <span class="token class-name">ExportDownloadBO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uuid</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">ExportDownloadBO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uuid</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>cacheObject<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 根据请求参数（实体类转json），从redis中检索
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">ExportDownloadBO</span> <span class="token function">redisParamsFilter</span><span class="token punctuation">(</span><span class="token class-name">String</span> params<span class="token punctuation">,</span> <span class="token class-name">String</span> exportType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 拿到全部这个用户的导出记录，1天内</span>
        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keys <span class="token operator">=</span> redisCache<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token constant">CACHE_DOWNLOAD_KEY_PREFIX</span> <span class="token operator">+</span> <span class="token class-name">SecurityUtils</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> exportType <span class="token operator">+</span> <span class="token string">&quot;:*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 循环判断，是不是同一个请求类型和参数</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> key <span class="token operator">:</span> keys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ExportCacheDTO</span> cacheObject <span class="token operator">=</span> redisCache<span class="token punctuation">.</span><span class="token function">getCacheObject</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//请求在3分钟内，并且参数相同；</span>
            <span class="token comment">// 1.首先需要判断：有效期内。其次是参数相同</span>
            <span class="token comment">// 2.其次判断，是否创建成功，成功了直接返回，没成功的话也可以结束了，不用再次创建</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> cacheObject<span class="token punctuation">.</span><span class="token function">getTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token constant">INTERVAL</span> <span class="token operator">&amp;&amp;</span> params<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cacheObject<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>cacheObject<span class="token punctuation">.</span><span class="token function">isComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token class-name">ExportDownloadBO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uuid</span><span class="token punctuation">(</span>cacheObject<span class="token punctuation">.</span><span class="token function">getUuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>cacheObject<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token class-name">ExportDownloadBO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uuid</span><span class="token punctuation">(</span>cacheObject<span class="token punctuation">.</span><span class="token function">getUuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//第一次创建，还没有UUID</span>
        <span class="token keyword">return</span> <span class="token class-name">ExportDownloadBO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * file 文件转 MultipartFile
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">MultipartFile</span> <span class="token function">getMultipartFile</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileItem</span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DiskFileItemFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createItem</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span>
                <span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">MULTIPART_FORM_DATA_VALUE</span>
                <span class="token punctuation">,</span> <span class="token boolean">true</span>
                <span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> os<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Invalid file: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonsMultipartFile</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="前端请求" tabindex="-1"><a class="header-anchor" href="#前端请求" aria-hidden="true">#</a> 前端请求</h3><p>前端的话，封装了一个方法，根据后台方法进行轮询、递归。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token doc-comment comment">/**
     * 处理下载返回状态的判断逻辑
     * 0-第一次创建（可以用UUID轮询），1-创建中（可以用UUID轮询），2-已创建（url可以直接下载）
     */</span>
    <span class="token function">repeatExport</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 0-第一次创建（可以用UUID轮询）</span>
      <span class="token comment">// 1-创建中（可以用UUID轮询）</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> data<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//一秒后开始执行，相当于进行了递归</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          that<span class="token punctuation">.</span>queryParams <span class="token operator">=</span> that<span class="token punctuation">.</span><span class="token function">addRepeatUid</span><span class="token punctuation">(</span>
            that<span class="token punctuation">.</span>queryParams<span class="token punctuation">,</span>
            data<span class="token punctuation">.</span>uuid<span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">exportOperationRecord</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>queryParams<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            that<span class="token punctuation">.</span><span class="token function">repeatExport</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 2-已创建（url可以直接下载）</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token string">&quot;_blank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        that<span class="token punctuation">.</span><span class="token function">clearRepeatUid</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>queryParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 请求参数加上 uid</span>
    <span class="token function">addRepeatUid</span><span class="token punctuation">(</span><span class="token parameter">params<span class="token punctuation">,</span> uid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> search <span class="token operator">=</span> params<span class="token punctuation">;</span>
      search<span class="token punctuation">.</span>params <span class="token operator">=</span>
        <span class="token keyword">typeof</span> search<span class="token punctuation">.</span>params <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span>
        search<span class="token punctuation">.</span>params <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
        <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>search<span class="token punctuation">.</span>params<span class="token punctuation">)</span> <span class="token operator">?</span>
          search<span class="token punctuation">.</span>params <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      search<span class="token punctuation">.</span>params<span class="token punctuation">[</span><span class="token string">&quot;repeatDownload&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> uid<span class="token punctuation">;</span>
      <span class="token keyword">return</span> search<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">clearRepeatUid</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> search <span class="token operator">=</span> params<span class="token punctuation">;</span>
      <span class="token keyword">delete</span> search<span class="token punctuation">.</span>params<span class="token punctuation">[</span><span class="token string">&quot;repeatDownload&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这里的下载方法还得优化下，会被浏览器拦截</p></blockquote><br><h3 id="下载中心" tabindex="-1"><a class="header-anchor" href="#下载中心" aria-hidden="true">#</a> 下载中心</h3><blockquote><ul><li><strong>就是根据 用户id，使用 keys 拿到全部key</strong></li><li><strong>循环组装返回就行，一天有效期也不会有太多数据</strong></li></ul></blockquote><br><h3 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h3>`,34),k={href:"https://www.pianshen.com/article/31601618407/",target:"_blank",rel:"noopener noreferrer"},r={href:"https://www.pudn.com/news/6228cf709ddf223e1ad143c8.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://blog.csdn.net/Tomwildboar/article/details/120106329",target:"_blank",rel:"noopener noreferrer"};function m(v,b){const s=e("ExternalLinkIcon");return c(),o("div",null,[u,n("ul",null,[n("li",null,[n("p",null,[n("a",k,[a("Excel导出功能超时解决方案 -- 异步处理 - 程序员大本营"),t(s)])])]),n("li",null,[n("p",null,[n("a",r,[a("ruoyi系统导入容易超时解决方案(redis+多线程)-pudn.com"),t(s)])])]),n("li",null,[n("p",null,[n("a",d,[a("超好用的Excel异步导出功能_小道仙97的博客-CSDN博客_异步导出excel"),t(s)])])])])])}const y=p(i,[["render",m],["__file","异步文件导出搭配 Redis.html.vue"]]);export{y as default};
